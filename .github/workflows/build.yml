name: Build

on:
  push:
    branches:
      - main
      - develop
      - feature/*

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: setup go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17

    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: test backend
      run: go test -v -race -coverprofile=coverage.out -coverpkg=./internal/... -covermode=atomic ./internal/...
      working-directory: ./backend

    - name: test frontend
      run: |
        npm ci
        npm test -- --env=jsdom --coverage --watchAll=false --reporters=default
      working-directory: ./frontend

    - name: upload coverage to codecov
      uses: codecov/codecov-action@v2

    - name: login to github docker registry
      uses: docker/login-action@v1.14.1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: publish backend docker image to registry
      env:
        COMMIT_SHA: ${{ github.sha }}
        REPO_REGISTRY: ghcr.io/${{ github.repository }}
      run: |
        docker build \
          -t $REPO_REGISTRY/${GITHUB_REPOSITORY#*/}-backend:${GITHUB_REF##*/} \
          -t $REPO_REGISTRY/${GITHUB_REPOSITORY#*/}-backend:$COMMIT_SHA \
          -t $REPO_REGISTRY/${GITHUB_REPOSITORY#*/}-backend:latest .
        docker push -a $REPO_REGISTRY/${GITHUB_REPOSITORY#*/}-backend
      working-directory: ./backend

    - name: publish frontend docker image to registry
      env:
        COMMIT_SHA: ${{ github.sha }}
        REPO_REGISTRY: ghcr.io/${{ github.repository }}
      run: |
        docker build \
          -t $REPO_REGISTRY/${GITHUB_REPOSITORY#*/}-frontend:${GITHUB_REF##*/} \
          -t $REPO_REGISTRY/${GITHUB_REPOSITORY#*/}-frontend:$COMMIT_SHA \
          -t $REPO_REGISTRY/${GITHUB_REPOSITORY#*/}-frontend:latest .
        docker push -a $REPO_REGISTRY/${GITHUB_REPOSITORY#*/}-frontend
      working-directory: ./frontend
