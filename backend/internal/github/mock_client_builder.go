// Code generated by MockGen. DO NOT EDIT.
// Source: client_builder.go

// Package github is a generated GoMock package.
package github

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	github "github.com/google/go-github/v43/github"
	oauth2 "golang.org/x/oauth2"
)

// MockClientBuilder is a mock of ClientBuilder interface.
type MockClientBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockClientBuilderMockRecorder
}

// MockClientBuilderMockRecorder is the mock recorder for MockClientBuilder.
type MockClientBuilderMockRecorder struct {
	mock *MockClientBuilder
}

// NewMockClientBuilder creates a new mock instance.
func NewMockClientBuilder(ctrl *gomock.Controller) *MockClientBuilder {
	mock := &MockClientBuilder{ctrl: ctrl}
	mock.recorder = &MockClientBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientBuilder) EXPECT() *MockClientBuilderMockRecorder {
	return m.recorder
}

// Build mocks base method.
func (m *MockClientBuilder) Build(ctx context.Context, token *oauth2.Token) *github.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build", ctx, token)
	ret0, _ := ret[0].(*github.Client)
	return ret0
}

// Build indicates an expected call of Build.
func (mr *MockClientBuilderMockRecorder) Build(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockClientBuilder)(nil).Build), ctx, token)
}

// GetOAuth2Config mocks base method.
func (m *MockClientBuilder) GetOAuth2Config() *oauth2.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOAuth2Config")
	ret0, _ := ret[0].(*oauth2.Config)
	return ret0
}

// GetOAuth2Config indicates an expected call of GetOAuth2Config.
func (mr *MockClientBuilderMockRecorder) GetOAuth2Config() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOAuth2Config", reflect.TypeOf((*MockClientBuilder)(nil).GetOAuth2Config))
}
